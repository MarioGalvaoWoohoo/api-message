name: Laravel CI

on:
  pull_request:
    branches:
      - develop



jobs:
  laravel-tests:
    name: CI
    runs-on: ubuntu-latest

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.2'
    - uses: actions/checkout@v2
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test

  # build-dockerhub:
  #   name: Build Docker
  #   needs: laravel-tests
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.USER_DOCKER_HUB }}
  #         password: ${{ secrets.PASS_DOCKER_HUB }}
  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: .
  #         push: false
  #         tags: geowebmaster/api-message:latest

  deploy:

    # needs: build-dockerhub
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: master

    - name: Deploy to server
      uses: easingthemes/ssh-deploy@v2.2.11
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        ARGS: "-rltgoDzvO --exclude .git --exclude .docker --exclude .github"
        REMOTE_HOST: ${{ secrets.SSH_HOST }}
        REMOTE_USER: ${{ secrets.SSH_USER }}
        TARGET: /home/${{ secrets.SSH_USER }}/projects/api-message

    - name: Execute comands SSH
      uses: appleboy/ssh-action@master
      env:
        USER_PASS: ${{ secrets.USER_PASS }}
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}
        envs: USER_PASS
        script: |
          sh script.sh
          echo $USER_PASS | sudo -S docker ps

