name: Laravel CI

on:
  push:
    branches: [ "master" ]

jobs:
  laravel-tests:
    name: CI
    runs-on: ubuntu-latest

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.2'
    - uses: actions/checkout@v2
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test

  deploy-aws:

    needs: laravel-tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Build Docker image
      run: docker build -t api-message .

    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1

    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1

    # - name: Tag Docker image
    #   id: tag-image
    #   run: |
    #     echo ${{ steps.login-ecr.outputs.registry }} # print ECR registry URL
    #     docker tag my-image-name:latest ${{ steps.login-ecr.outputs.registry }}/my-image-name:latest

    # - name: Push Docker image
    #   id: push-image
    #   run: |
    #     docker push ${{ steps.login-ecr.outputs.registry }}/my-image-name:latest

    # - name: Update AWS EC2 service
    #   run: |
    #     aws ecs update-service --cluster my-ecs-cluster --service my-service --force-new-deployment --region us-east-1 --image ${{ steps.login-ecr.outputs.registry }}/my-image-name:latest
